services:
  # 1. MinIO (démarre normalement)
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: voraladmin
      MINIO_ROOT_PASSWORD: D@g3n_6yTMf!
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio-data:/data

  # 2. Init : on attend MinIO, on crée l’alias + le bucket
  minio-init:
    image: minio/mc
    # ► On remplace complètement l’entrypoint du conteneur
    entrypoint: /bin/sh
    # ► Un SEUL argument pour /bin/sh : -c "…"
    command: -c "
      echo '⏳  MinIO init…';            \
      sleep 5;                          \
      mc alias set local http://minio:9000 voraladmin D@g3n_6yTMf!; \
      mc ls local/voral || mc mb local/voral; \
      echo '✅  Bucket voral prêt.'"
    depends_on:
      - minio
    restart: "no"        # s’exécute une fois puis s’arrête

  # 3. LocalStack
  localstack:
    image: localstack/localstack
    environment:
      SERVICES: sqs,dynamodb
    ports: [ "4566:4566" ]
    volumes: [ "ls-data:/var/lib/localstack" ]

  # 4. API FastAPI
  api:
    build: ./api
    volumes:
      - ./api/app:/app/app
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_KEY: voraladmin
      S3_SECRET: D@g3n_6yTMf!
      S3_BUCKET: voral
      AWS_ENDPOINT: http://localstack:4566
    depends_on: [ minio, minio-init, localstack ]
    ports: [ "8000:8000" ]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # 5. Worker
  worker:
    build: ./worker
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_KEY: voraladmin
      S3_SECRET: D@g3n_6yTMf!
      S3_BUCKET: voral
      AWS_ENDPOINT: http://localstack:4566
    depends_on:
      - minio
      - minio-init
      - localstack
    restart: unless-stopped


volumes:
  minio-data:
  ls-data:
